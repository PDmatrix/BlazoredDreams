@using BlazoredDreams.App.Redux
@inherits BlazoredDreams.App.BaseComponents.BaseComponent
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<div class="row">
    @if (Store.State.IsLoading)
    {
        <p>Loading...</p>
    }
    else
    {
        foreach (var post in Store.State.Posts)
        {
            <PostItem Post="@post"/>
        }
        <!-- Pagination Area Start -->
        <div class="mosh-pagination-area">
            <nav>
                <ul class="pagination">
                    @for (var i = 1; i <= Store.State.Posts.FirstOrDefault()?.TotalPages; i++)
                    {
                        <li class="page-item"><a class="page-link" href="/posts?page=@i">@i.</a></li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

@functions
{
    protected override async Task OnInitAsync()
    {
        await ActionCreators.FetchPosts(Store.Dispatch, Mediator);
    }
}
